name: 'Setup Log Analyzer Environment'
description: 'Sets up Python environment and installs dependencies for Log Analyzer Agent'

inputs:
  python-version:
    description: 'Python version to use'
    required: false
    default: '3.11'
  install-dev-deps:
    description: 'Install development dependencies'
    required: false
    default: 'false'

runs:
  using: 'composite'
  steps:
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install base dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install -e .
    
    - name: Install dev dependencies
      if: inputs.install-dev-deps == 'true'
      shell: bash
      run: |
        pip install pytest pytest-asyncio pytest-cov
        pip install langgraph-cli
    
    - name: Create .env file from secrets
      shell: bash
      run: |
        echo "GEMINI_API_KEY=${{ env.GEMINI_API_KEY }}" > .env
        echo "GROQ_API_KEY=${{ env.GROQ_API_KEY }}" >> .env
        echo "TAVILY_API_KEY=${{ env.TAVILY_API_KEY }}" >> .env
        echo "USE_IMPROVED_LOG_ANALYZER=true" >> .env
        if [ -n "${{ env.LANGCHAIN_API_KEY }}" ]; then
          echo "LANGCHAIN_API_KEY=${{ env.LANGCHAIN_API_KEY }}" >> .env
        fi