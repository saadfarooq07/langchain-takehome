name: LangGraph Docker Build

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - 'log-analyzer-api/**'
      - 'Dockerfile'
      - 'docker-compose.yml'
      - 'requirements.txt'
      - 'pyproject.toml'
      - '.github/workflows/langgraph-docker-build.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'log-analyzer-api/**'
      - 'Dockerfile'
      - 'docker-compose.yml'
      - 'requirements.txt'
      - 'pyproject.toml'
      - '.github/workflows/langgraph-docker-build.yml'

env:
  GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
  GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
  TAVILY_API_KEY: ${{ secrets.TAVILY_API_KEY }}

jobs:
  docker-build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Create .env file
      run: |
        echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" > .env
        echo "GROQ_API_KEY=${{ secrets.GROQ_API_KEY }}" >> .env
        echo "TAVILY_API_KEY=${{ secrets.TAVILY_API_KEY }}" >> .env
        echo "USE_IMPROVED_LOG_ANALYZER=true" >> .env
    
    - name: Build Docker image
      run: |
        docker build -t log-analyzer-agent:test .
    
    - name: Run Docker container test
      run: |
        docker run --rm \
          -e GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }} \
          -e GROQ_API_KEY=${{ secrets.GROQ_API_KEY }} \
          -e TAVILY_API_KEY=${{ secrets.TAVILY_API_KEY }} \
          -e USE_IMPROVED_LOG_ANALYZER=true \
          log-analyzer-agent:test python -c "from log_analyzer_agent.graph import graph; print('Graph imported successfully')"
    
    - name: Test Docker Compose build
      run: |
        docker-compose build
    
    - name: Docker Compose config validation
      run: |
        docker-compose config