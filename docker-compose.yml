version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: loganalyzer
      POSTGRES_USER: loganalyzer
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U loganalyzer -d loganalyzer"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  log-analyzer-api:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://loganalyzer:password@postgres:5432/loganalyzer
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      GROQ_API_KEY: ${GROQ_API_KEY}
      TAVILY_API_KEY: ${TAVILY_API_KEY}
      BETTER_AUTH_SECRET: ${BETTER_AUTH_SECRET}
      BETTER_AUTH_URL: http://localhost:8000
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    command: python main.py --mode api

volumes:
  postgres_data:
  redis_data: