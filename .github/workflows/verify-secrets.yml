name: Verify Secrets

on:
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/verify-secrets.yml'

jobs:
  verify-secrets:
    runs-on: ubuntu-latest
    
    steps:
    - name: Check required secrets
      run: |
        echo "üîç Checking if required secrets are configured..."
        
        MISSING_SECRETS=""
        
        if [ -z "${{ secrets.GEMINI_API_KEY }}" ]; then
          echo "‚ùå GEMINI_API_KEY is not set"
          MISSING_SECRETS="${MISSING_SECRETS}GEMINI_API_KEY "
        else
          echo "‚úÖ GEMINI_API_KEY is configured"
        fi
        
        if [ -z "${{ secrets.GROQ_API_KEY }}" ]; then
          echo "‚ùå GROQ_API_KEY is not set"
          MISSING_SECRETS="${MISSING_SECRETS}GROQ_API_KEY "
        else
          echo "‚úÖ GROQ_API_KEY is configured"
        fi
        
        if [ -z "${{ secrets.TAVILY_API_KEY }}" ]; then
          echo "‚ùå TAVILY_API_KEY is not set"
          MISSING_SECRETS="${MISSING_SECRETS}TAVILY_API_KEY "
        else
          echo "‚úÖ TAVILY_API_KEY is configured"
        fi
        
        if [ -z "${{ secrets.LANGCHAIN_API_KEY }}" ]; then
          echo "‚ö†Ô∏è  LANGCHAIN_API_KEY is not set (optional for deployment)"
        else
          echo "‚úÖ LANGCHAIN_API_KEY is configured"
        fi
        
        if [ -n "$MISSING_SECRETS" ]; then
          echo ""
          echo "‚ùå Missing required secrets: $MISSING_SECRETS"
          echo ""
          echo "Please add these secrets in:"
          echo "Repository Settings ‚Üí Secrets and variables ‚Üí Actions ‚Üí New repository secret"
          exit 1
        else
          echo ""
          echo "‚úÖ All required secrets are configured!"
        fi
    
    - name: Test API connectivity
      if: success()
      run: |
        echo "üîó Testing API connectivity..."
        
        # Test Gemini API
        if curl -s -o /dev/null -w "%{http_code}" \
          -H "Content-Type: application/json" \
          -H "x-goog-api-key: ${{ secrets.GEMINI_API_KEY }}" \
          "https://generativelanguage.googleapis.com/v1beta/models" | grep -q "200\|401"; then
          echo "‚úÖ Gemini API key format appears valid"
        else
          echo "‚ö†Ô∏è  Could not validate Gemini API key"
        fi
        
        echo ""
        echo "‚úÖ Secret verification complete!"